plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id "com.avast.gradle.docker-compose" version "0.17.4"
    id 'application'
    id 'jacoco'
}

group = 'com.ntnn'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.json:json:20240303'
    implementation 'org.apache.commons:commons-lang3:3.14.0'

    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.2'

//    implementation 'com.prowidesoftware:pw-iso20022:SRU2023-10.1.3'
    compileOnly 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'com.google.guava:guava:33.2.1-jre'

    implementation 'com.sun.xml.bind:jaxb-impl:4.0.0'
    implementation 'com.sun.xml.bind:jaxb-core:4.0.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'

    implementation 'io.github.resilience4j:resilience4j-retry:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-ratelimiter:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'

    implementation 'org.bouncycastle:bcprov-jdk18on:1.78.1'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.1'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    testImplementation 'io.cucumber:cucumber-java:7.15.0'
    testImplementation 'io.cucumber:cucumber-junit:7.15.0'
    testImplementation 'io.cucumber:cucumber-spring:7.15.0'
    testImplementation("com.squareup.okhttp3:okhttp:4.12.0")
}

test {
    useJUnitPlatform()
}

dockerCompose {
    useComposeFiles = ['src/docker/docker-compose.yml']
}


tasks.register('blackboxTest', Test) {
    dependsOn['testClasses']
    useJUnit()
    include 'blackbox/**'
}